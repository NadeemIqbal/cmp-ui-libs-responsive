name: Publish to Maven Central

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: '1.0.4'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Import GPG key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "Setting up GPG..."
        
        # Create GPG key file
        echo "$GPG_PRIVATE_KEY" > private.key
        
        # Import the key
        gpg --batch --import private.key
        
        # Configure GPG for non-interactive use
        echo "use-agent" >> ~/.gnupg/gpg.conf
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        
        # Set up GPG agent with passphrase
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        gpgconf --reload gpg-agent
        
        # List keys to verify import and get key ID
        echo "Available GPG keys:"
        gpg --list-secret-keys --keyid-format LONG
        
        # Get the key ID and export it for Gradle
        GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2)
        echo "Using GPG Key ID: $GPG_KEY_ID"
        echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV
        
        # Test signing to make sure it works
        echo "test" | gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback --clearsign
        
        # Clean up
        rm private.key
        
        echo "GPG key imported and configured successfully"
        
    - name: Publish to Maven Central
      env:
        CENTRAL_PORTAL_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
        CENTRAL_PORTAL_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        PUBLISH_VERSION: ${{ github.event.inputs.version || github.ref_name }}
      run: |
        # Set version from input or tag
        VERSION=${PUBLISH_VERSION#v}  # Remove 'v' prefix if present
        echo "Publishing version: $VERSION"
        
        # Make gradlew executable
        chmod +x ./gradlew
        
        # Update version in build file
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" responsive-ui/build.gradle.kts
        sed -i "s/version = \".*\" \/\/ .*/version = \"$VERSION\" \/\/ Auto-generated by GitHub Actions/" responsive-ui/build.gradle.kts
        
        # Verify the version was updated
        echo "Updated version in build file:"
        grep "version = " responsive-ui/build.gradle.kts | head -1
        
        # Run the automated publishing
        ./gradlew publishToMavenCentral --stacktrace
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        files: |
          responsive-ui/build/central-publishing/central-bundle.zip 